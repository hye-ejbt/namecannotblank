import React from "react";

/**
 * 개선된 레인 정보 테이블 모달 UI
 * - 체크박스 그룹은 명확하게 표시
 * - 레이아웃 정리 및 가독성 향상
 */
export default function App() {
  const [open, setOpen] = React.useState(true);
  return (
    <div className="min-h-screen bg-slate-100 flex items-center justify-center p-6">
      <button
        className="px-4 py-2 rounded-xl bg-slate-900 text-white shadow"
        onClick={() => setOpen(true)}
      >
        레인 정보 테이블 열기
      </button>
      <LaneInfoModal open={open} onClose={() => setOpen(false)} />
    </div>
  );
}

export function LaneInfoModal({ open, onClose }: { open: boolean; onClose: () => void }) {
  if (!open) return null;
  return (
    <div className="fixed inset-0 z-50">
      <div className="absolute inset-0 bg-black/50" onClick={onClose} />

      <div className="absolute inset-0 flex items-center justify-center p-4">
        <div className="w-[460px] max-h-[90vh] rounded-2xl bg-white shadow-2xl ring-1 ring-slate-200 overflow-hidden">
          {/* Header */}
          <div className="px-4 py-3 bg-slate-50 border-b border-slate-200 flex items-center justify-between">
            <h2 className="text-sm font-semibold text-slate-800">레인 정보 테이블</h2>
            <button onClick={onClose} className="p-1.5 rounded-md hover:bg-slate-200/60">
              <span className="sr-only">닫기</span>
              <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2"><path d="M18 6 6 18M6 6l12 12"/></svg>
            </button>
          </div>

          {/* Body */}
          <div className="p-4 overflow-y-auto space-y-5">
            <Fieldset title="기본정보">
              <div className="grid grid-cols-12 gap-3 items-center">
                <label className="col-span-4 text-xs text-slate-600">안내 코드</label>
                <select className="col-span-8 input">
                  <option>선택</option>
                </select>

                <label className="col-span-4 text-xs text-slate-600">접속각도</label>
                <NumberInput className="col-span-6" placeholder="0" />
                <span className="col-span-2 text-[11px] text-slate-500">도</span>
              </div>
            </Fieldset>

            <Fieldset title="링크 지정">
              <div className="grid grid-cols-2 gap-4">
                <ListBox label="진입 LINK" values={["55846", "55826", "55848"]} />
                <ListBox label="진출 LINK" values={["55878"]} />
              </div>
              <div className="mt-3 flex items-center gap-4">
                <Radio label="진입" name="linkType" defaultChecked />
                <Radio label="진출" name="linkType" />
                <button className="ml-auto btn-secondary">추가</button>
              </div>
            </Fieldset>

            <Fieldset title="통과">
              <div className="flex items-center gap-6">
                <Checkbox label="노드1" />
                <Checkbox label="노드2" />
              </div>
            </Fieldset>

            <Fieldset title="차선 정보">
              <div className="space-y-3">
                <div className="grid grid-cols-12 gap-3 items-center">
                  <label className="col-span-4 text-xs text-slate-600">본선 차선수</label>
                  <NumberInput className="col-span-6" placeholder="0" />
                  <button className="btn-icon" aria-label="재생">
                    <svg width="14" height="14" viewBox="0 0 24 24" fill="currentColor"><path d="M8 5v14l11-7z"/></svg>
                  </button>
                </div>

                <div className="grid grid-cols-2 gap-3">
                  <div className="flex items-center gap-2"><span className="text-xs w-8">좌측</span><NumberInput className="flex-1" placeholder="0" /></div>
                  <div className="flex items-center gap-2"><span className="text-xs w-8">우측</span><NumberInput className="flex-1" placeholder="0" /></div>
                </div>
              </div>
            </Fieldset>

            <Fieldset title="통행 정보">
              <div className="flex items-center gap-4 mb-2">
                <label className="text-xs text-slate-600">코드</label>
                <NumberInput className="w-24" placeholder="0" />
              </div>
              <div className="border border-slate-200 rounded-lg overflow-hidden">
                <table className="w-full text-xs text-center">
                  <thead className="bg-slate-50">
                    <tr>
                      <th className="px-3 py-2 text-left font-medium text-slate-700 border-b">구분</th>
                      {Array.from({ length: 6 }).map((_, i) => (
                        <th key={i} className="px-3 py-2 font-medium text-slate-700 border-b">{i + 1}</th>
                      ))}
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td className="px-3 py-2 text-slate-700 text-left border-t">차선</td>
                      {Array.from({ length: 6 }).map((_, i) => (
                        <td key={i} className="border-t">
                          <input type="checkbox" className="accent-slate-800" />
                        </td>
                      ))}
                    </tr>
                  </tbody>
                </table>
              </div>
            </Fieldset>

            <Fieldset title="입력 / 수정 정보">
              <div className="space-y-2">
                <InputRow label="입력자" />
                <InputRow label="입력일자" />
                <InputRow label="수정자" />
                <InputRow label="수정일시" />
              </div>
            </Fieldset>
          </div>

          {/* Footer */}
          <div className="px-4 py-3 bg-slate-50 border-t border-slate-200 flex items-center justify-between">
            <button className="px-3 py-2 text-[13px] text-red-600 hover:bg-red-50 rounded-lg">삭제</button>
            <div className="flex items-center gap-2">
              <button className="btn-secondary" onClick={onClose}>종료</button>
              <button className="btn-primary">저장</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

/* --- 컴포넌트 --- */
function Fieldset({ title, children }: React.PropsWithChildren<{ title: string }>) {
  return (
    <section className="rounded-xl border border-slate-200">
      <div className="px-3 py-2 bg-slate-50/80 border-b border-slate-200 text-[12px] text-slate-700 font-medium rounded-t-xl">{title}</div>
      <div className="p-3 space-y-2">{children}</div>
    </section>
  );
}

function NumberInput({ className = "", ...props }: React.InputHTMLAttributes<HTMLInputElement>) {
  return <input type="number" className={"input "+className} {...props} />;
}

function ListBox({ label, values = [] as string[] }) {
  return (
    <div>
      <label className="label">{label}</label>
      <div className="border border-slate-200 rounded-lg overflow-auto max-h-24 bg-white">
        {values.map((v, i) => (
          <div key={i} className="px-2 py-1 text-xs hover:bg-slate-50 cursor-pointer">{v}</div>
        ))}
      </div>
    </div>
  );
}

function Checkbox({ label }: { label: string }) {
  return (
    <label className="inline-flex items-center gap-2 text-xs text-slate-700">
      <input type="checkbox" className="accent-slate-800" /> {label}
    </label>
  );
}

function Radio({ label, name, defaultChecked }: { label: string; name: string; defaultChecked?: boolean }) {
  return (
    <label className="inline-flex items-center gap-2 text-xs text-slate-700">
      <input type="radio" name={name} className="accent-slate-800" defaultChecked={defaultChecked} /> {label}
    </label>
  );
}

function InputRow({ label }: { label: string }) {
  return (
    <div className="grid grid-cols-12 gap-2 items-center">
      <label className="col-span-4 text-xs text-slate-600">{label}</label>
      <input className="col-span-8 input" placeholder="" />
    </div>
  );
}

/* --- Tailwind 헬퍼 --- */
const base = typeof document !== "undefined" ? document.createElement("style") : null;
if (base) {
  base.innerHTML = `
    .input { @apply w-full h-8 px-2 rounded-lg border border-slate-200 focus:outline-none focus:ring-2 focus:ring-slate-300/60; }
    .label { @apply block text-xs text-slate-600 mb-1; }
    .btn-primary { @apply h-9 px-4 rounded-lg bg-slate-900 text-white text-[13px] hover:opacity-90; }
    .btn-secondary { @apply h-9 px-4 rounded-lg border border-slate-300 text-slate-800 text-[13px] bg-white hover:bg-slate-100; }
    .btn-icon { @apply h-8 w-8 rounded-lg border border-slate-300 text-slate-700 bg-white flex items-center justify-center hover:bg-slate-100; }
  `;
  document.head.appendChild(base);
}
